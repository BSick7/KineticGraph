{"version":3,"sources":["_Version.ts","Physics/ForceHelper.ts","Physics/Engine.ts","EdgeCanvas.ts","NodeCanvas.ts","ILinkableEdge.ts","Graph.ts"],"names":["Fayde","Fayde.KineticGraph","Fayde.KineticGraph.Physics","Fayde.KineticGraph.Physics.ForceHelper","Fayde.KineticGraph.Physics.ForceHelper.constructor","Fayde.KineticGraph.Physics.ForceHelper.ApplyCoulombRepulsion","Fayde.KineticGraph.Physics.ForceHelper.ApplyHookeAttraction","Fayde.KineticGraph.Physics.Engine","Fayde.KineticGraph.Physics.Engine.constructor","Fayde.KineticGraph.Physics.Engine.Attach","Fayde.KineticGraph.Physics.Engine.Step","Fayde.KineticGraph.Physics.Engine.ApplyForces","Fayde.KineticGraph.Physics.Engine.Disturb","Fayde.KineticGraph.EdgeCanvas","Fayde.KineticGraph.EdgeCanvas.constructor","Fayde.KineticGraph.EdgeCanvas.IsBidirectional","Fayde.KineticGraph.EdgeCanvas.Left","Fayde.KineticGraph.EdgeCanvas.Top","Fayde.KineticGraph.EdgeCanvas.UpdatePosition","Fayde.KineticGraph.buildLine","Fayde.KineticGraph.buildTriangle","Fayde.KineticGraph.getLineAngle","Fayde.KineticGraph.getEdgeOfCircle","Fayde.KineticGraph.NodeState","Fayde.KineticGraph.NodeState.constructor","Fayde.KineticGraph.NodeCanvas","Fayde.KineticGraph.NodeCanvas.constructor","Fayde.KineticGraph.NodeCanvas.Linkable","Fayde.KineticGraph.NodeCanvas.OnIsSelectedChanged","Fayde.KineticGraph.NodeCanvas.OnRadiusChanged","Fayde.KineticGraph.NodeCanvas.UpdatePosition","Fayde.KineticGraph.NodeCanvas.SetDisplayMemberPath","Fayde.KineticGraph.NodeCanvas.TextBlock_SizeChanged","Fayde.KineticGraph.NodeCanvas.UpdateMarkers","Fayde.KineticGraph.NodeCanvas.Node_MouseLeftButtonDown","Fayde.KineticGraph.NodeCanvas.Node_MouseLeftButtonUp","Fayde.KineticGraph.NodeCanvas.Node_MouseMove","Fayde.KineticGraph.NodeCanvas.Node_LostMouseCapture","Fayde.KineticGraph.Graph","Fayde.KineticGraph.Graph.constructor","Fayde.KineticGraph.Graph.OnIsBidirectionalChanged","Fayde.KineticGraph.Graph.OnSelectedNodeChanged","Fayde.KineticGraph.Graph.OnNodesSourceChanged","Fayde.KineticGraph.Graph.NodesSource_CollectionChanged","Fayde.KineticGraph.Graph.OnEdgesSourceChanged","Fayde.KineticGraph.Graph.EdgesSource_CollectionChanged","Fayde.KineticGraph.Graph.OnRepulsionChanged","Fayde.KineticGraph.Graph.OnSpringTensionChanged","Fayde.KineticGraph.Graph.OnNodeDisplayMemberPathChanged","Fayde.KineticGraph.Graph.OnNodeWeightPathChanged","Fayde.KineticGraph.Graph.SetNodeWeightPath","Fayde.KineticGraph.Graph.OnTicked","Fayde.KineticGraph.Graph.Graph_MouseLeftButtonDown","Fayde.KineticGraph.Graph.Graph_MouseMove","Fayde.KineticGraph.Graph.Graph_MouseLeftButtonUp","Fayde.KineticGraph.Graph.Graph_LostMouseCapture","Fayde.KineticGraph.Graph.Graph_SizeChanged","Fayde.KineticGraph.Graph.ResetMovement","Fayde.KineticGraph.Graph.Center","Fayde.KineticGraph.Graph.UpdateVisuals","Fayde.KineticGraph.Graph.AddEdges","Fayde.KineticGraph.Graph.FindOrAddEdge","Fayde.KineticGraph.Graph.AddEdge","Fayde.KineticGraph.Graph.RemoveEdges","Fayde.KineticGraph.Graph.RemoveEdge","Fayde.KineticGraph.Graph.ClearEdges","Fayde.KineticGraph.Graph.FindEdgeIndex","Fayde.KineticGraph.Graph.AddNodes","Fayde.KineticGraph.Graph.FindOrAddNode","Fayde.KineticGraph.Graph.AddNode","Fayde.KineticGraph.Graph.RemoveNodes","Fayde.KineticGraph.Graph.RemoveNode","Fayde.KineticGraph.Graph.ClearNodes","Fayde.KineticGraph.Graph.FindNodeIndex","Fayde.KineticGraph.Graph.Node_ManualMovement","Fayde.KineticGraph.Graph._GetRandomVector","Fayde.KineticGraph.randomInt","Fayde.KineticGraph.coerceToArray"],"mappings":"AAAA,IAAO,KAAK,CAEX;AAFD,WAAO,KAAK;IAACA,IAAAA,YAAYA,CAExBA;IAFYA,WAAAA,YAAYA,EAACA,CAACA;QACZC,oBAAOA,GAAGA,OAAOA,CAACA;IACjCA,CAACA,EAFYD,YAAYA,GAAZA,kBAAYA,KAAZA,kBAAYA,QAExBA;AAADA,CAACA,EAFM,KAAK,KAAL,KAAK,QAEX;ACFD,IAAO,KAAK,CAiEX;AAjED,WAAO,KAAK;IAACA,IAAAA,YAAYA,CAiExBA;IAjEYA,WAAAA,YAAYA;QAACC,IAAAA,OAAOA,CAiEhCA;QAjEyBA,WAAAA,OAAOA,EAACA,CAACA;YAY/BC,IAAIA,2BAA2BA,GAAGA,WAAWA,CAACA;YAC9CA,IAAIA,aAAaA,GAAGA,EAAEA,CAACA;YACvBA;gBAAAC;gBAkDAC,CAACA;gBA/CUD,iCAAqBA,GAA5BA,UAA6BA,CAAaA,EAAEA,CAAaA,EAAEA,CAASA;oBAChEE,IAAIA,EAAEA,GAAGA,CAACA,CAACA,QAAQA,CAACA,CAACA,GAAGA,CAACA,CAACA,QAAQA,CAACA,CAACA,CAACA;oBACrCA,IAAIA,EAAEA,GAAGA,CAACA,CAACA,QAAQA,CAACA,CAACA,GAAGA,CAACA,CAACA,QAAQA,CAACA,CAACA,CAACA;oBACrCA,IAAIA,MAAMA,GAAGA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,CAACA;oBAC/BA,EAAEA,CAACA,CAACA,MAAMA,IAAIA,CAACA,CAACA;wBACZA,MAAMA,CAACA;oBACXA,IAAIA,CAACA,GAAGA,IAAIA,CAACA,IAAIA,CAACA,MAAMA,CAACA,CAACA;oBAE1BA,IAAIA,GAAGA,GAAGA,GAAGA,GAAGA,MAAMA,CAACA;oBAEvBA,GAAGA,IAAIA,WAAWA,CAACA,kBAAkBA,GAAGA,CAACA,CAACA;oBAE1CA,GAAGA,IAAIA,CAACA,CAACA;oBAETA,EAAEA,CAACA,CAACA,GAAGA,GAAGA,aAAaA,CAACA;wBACpBA,GAAGA,GAAGA,aAAaA,CAACA;oBAExBA,IAAIA,KAAKA,GAAGA,GAAGA,GAAGA,CAACA,EAAEA,GAAGA,CAACA,CAACA,CAACA;oBAC3BA,IAAIA,KAAKA,GAAGA,GAAGA,GAAGA,CAACA,EAAEA,GAAGA,CAACA,CAACA,CAACA;oBAE3BA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA,QAAQA,CAACA,CAACA,CAACA;wBACdA,CAACA,CAACA,KAAKA,CAACA,CAACA,IAAIA,KAAKA,CAACA;wBACnBA,CAACA,CAACA,KAAKA,CAACA,CAACA,IAAIA,KAAKA,CAACA;oBACvBA,CAACA;oBAEDA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA,QAAQA,CAACA,CAACA,CAACA;wBACdA,CAACA,CAACA,KAAKA,CAACA,CAACA,IAAIA,KAAKA,CAACA;wBACnBA,CAACA,CAACA,KAAKA,CAACA,CAACA,IAAIA,KAAKA,CAACA;oBACvBA,CAACA;gBACLA,CAACA;gBACMF,gCAAoBA,GAA3BA,UAA4BA,CAAaA,EAAEA,CAAaA,EAAEA,CAASA;oBAC/DG,IAAIA,EAAEA,GAAGA,CAACA,CAACA,QAAQA,CAACA;oBACpBA,IAAIA,EAAEA,GAAGA,CAACA,CAACA,QAAQA,CAACA;oBAEpBA,IAAIA,CAACA,GAAGA,CAACA,CAACA,GAAGA,CAACA,EAAEA,CAACA,CAACA,GAAGA,EAAEA,CAACA,CAACA,CAACA,CAACA;oBAC3BA,IAAIA,CAACA,GAAGA,CAACA,CAACA,GAAGA,CAACA,EAAEA,CAACA,CAACA,GAAGA,EAAEA,CAACA,CAACA,CAACA,CAACA;oBAE3BA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA,QAAQA,CAACA,CAACA,CAACA;wBACdA,CAACA,CAACA,KAAKA,CAACA,CAACA,IAAIA,CAACA,CAACA;wBACfA,CAACA,CAACA,KAAKA,CAACA,CAACA,IAAIA,CAACA,CAACA;oBACnBA,CAACA;oBAEDA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA,QAAQA,CAACA,CAACA,CAACA;wBACdA,CAACA,CAACA,KAAKA,CAACA,CAACA,IAAIA,CAACA,CAACA;wBACfA,CAACA,CAACA,KAAKA,C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","file":"Fayde.KineticGraph.js","sourcesContent":["module Fayde.KineticGraph {\r\n    export var version = '0.4.0';\r\n}","module Fayde.KineticGraph.Physics {\r\n    export interface IVector {\r\n        X: number;\r\n        Y: number;\r\n    }\r\n    export interface INodeState {\r\n        IsFrozen: boolean;\r\n        Position: IVector;\r\n        Velocity: IVector;\r\n        Force: IVector;\r\n    }\r\n\r\n    var DEFAULT_ATTRACTION_CONSTANT = 0.000000004;\r\n    var MAGNITUDE_MAX = 10;\r\n    export class ForceHelper {\r\n        static AttractionConstant: number = DEFAULT_ATTRACTION_CONSTANT;\r\n        /// Applies coulomb repulsion to both points\r\n        static ApplyCoulombRepulsion(a: INodeState, b: INodeState, k: number) {\r\n            var dx = a.Position.X - b.Position.X;\r\n            var dy = a.Position.Y - b.Position.Y;\r\n            var sqDist = dx * dx + dy * dy;\r\n            if (sqDist == 0)\r\n                return;\r\n            var d = Math.sqrt(sqDist);\r\n\r\n            var mag = 1.0 / sqDist; // Force magnitude\r\n\r\n            mag -= ForceHelper.AttractionConstant * d; // plus WEAK attraction\r\n\r\n            mag *= k;\r\n\r\n            if (mag > MAGNITUDE_MAX)\r\n                mag = MAGNITUDE_MAX; // Clip maximum\r\n\r\n            var tempX = mag * (dx / d);\r\n            var tempY = mag * (dy / d);\r\n\r\n            if (!a.IsFrozen) {\r\n                a.Force.X += tempX;\r\n                a.Force.Y += tempY;\r\n            }\r\n\r\n            if (!b.IsFrozen) {\r\n                b.Force.X -= tempX;\r\n                b.Force.Y -= tempY;\r\n            }\r\n        }\r\n        static ApplyHookeAttraction(a: INodeState, b: INodeState, k: number) {\r\n            var p1 = a.Position;\r\n            var p2 = b.Position;\r\n\r\n            var x = -k * (p1.X - p2.X);\r\n            var y = -k * (p1.Y - p2.Y);\r\n\r\n            if (!a.IsFrozen) {\r\n                a.Force.X += x;\r\n                a.Force.Y += y;\r\n            }\r\n\r\n            if (!b.IsFrozen) {\r\n                b.Force.X -= x;\r\n                b.Force.Y -= y;\r\n            }\r\n        }\r\n    }\r\n}","/// <reference path=\"../ILinkable.ts\" />\r\n/// <reference path=\"ForceHelper.ts\" />\r\n\r\nmodule Fayde.KineticGraph.Physics {\r\n    export interface INode {\r\n        Linkable: ILinkable;\r\n        PhysicalState: INodeState;\r\n        Degree: number;\r\n        Radius: number;\r\n    }\r\n    export interface IEdge {\r\n        Source: INode;\r\n        Sink: INode;\r\n    }\r\n\r\n    var dT = 0.95;\r\n    var damping = 0.90;\r\n    var KE_THRESHOLD = 0.001;\r\n    var numIterations = 2;\r\n\r\n    export class Engine {\r\n        private _KE: number = Number.POSITIVE_INFINITY;\r\n\r\n        private _Nodes: INode[] = null;\r\n        private _Edges: IEdge[] = null;\r\n\r\n        private _IsGraphStabilized = false;\r\n        private _IsGraphDisturbed = false;\r\n\r\n        Repulsion = 300.0;\r\n        SpringTension = 0.9 * 0.001;\r\n\r\n        GraphStabilized = new nullstone.Event();\r\n        GraphStabilizing = new nullstone.Event();\r\n\r\n        Attach(nodes: INode[], edges: IEdge[]) {\r\n            this._Nodes = nodes;\r\n            this._Edges = edges;\r\n        }\r\n        Step() {\r\n            if (this._Nodes == null)\r\n                return;\r\n            if (this._Edges == null)\r\n                return;\r\n\r\n            var avgKE = this._KE / this._Nodes.length;\r\n            if (KE_THRESHOLD <= avgKE) {\r\n                if (this._IsGraphStabilized) {\r\n                    this._IsGraphStabilized = false;\r\n                    this.GraphStabilizing.raise(this, null);\r\n                }\r\n                for (var i = 0; i < numIterations; i++) {\r\n                    this._KE = this.ApplyForces();\r\n                }\r\n            } else if (this._IsGraphDisturbed) {\r\n                if (this._IsGraphStabilized) {\r\n                    this._IsGraphStabilized = false;\r\n                    this.GraphStabilizing.raise(this, null);\r\n                }\r\n                this._KE = this.ApplyForces();\r\n                this._IsGraphDisturbed = false;\r\n            } else if (!this._IsGraphStabilized) {\r\n                this._IsGraphStabilized = true;\r\n                this.GraphStabilized.raise(this, null);\r\n            }\r\n        }\r\n        ApplyForces() {\r\n            var totalKE = 0.0;\r\n            var nodes = this._Nodes;\r\n            var edges = this._Edges;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                nodes[i].PhysicalState.Force.X = 0;\r\n                nodes[i].PhysicalState.Force.Y = 0;\r\n            }\r\n\r\n            var node: INode;\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                node = nodes[i];\r\n                var state = node.PhysicalState;\r\n                if (state.IsFrozen)\r\n                    continue;\r\n\r\n                //Coulomb repulsion against every other node\r\n                for (var j = i + 1; j < nodes.length; j++) {\r\n                    var other = nodes[j];\r\n                    var otherState = other.PhysicalState;\r\n\r\n                    /* Applies coulumb replusion to both nodes\r\n                     * The repulsion constant is modified dynamically based on the node vertex degree.\r\n                     * In a nutshell, lots of connected nodes --> more repulsion.\r\n                     * Increasing repulsion initial value will increase separation of a cluster.\r\n                     */\r\n                    var log2degree = Math.log(other.Degree + 2) / Math.log(2);\r\n                    var repulsion = this.Repulsion * log2degree;\r\n                    repulsion *= (node.Radius + other.Radius) / 10.0;\r\n                    ForceHelper.ApplyCoulombRepulsion(state, otherState, repulsion);\r\n                }\r\n            }\r\n\r\n            //Hooke's attraction with every connected node\r\n            var tension = this.SpringTension;\r\n            for (var i = 0; i < edges.length; i++) {\r\n                var edge = edges[i];\r\n                ForceHelper.ApplyHookeAttraction(edge.Source.PhysicalState, edge.Sink.PhysicalState, tension);\r\n            }\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                var state = nodes[i].PhysicalState;\r\n                if (state.IsFrozen)\r\n                    continue;\r\n                // Update velocity\r\n                state.Velocity.X = (state.Force.X * dT + state.Velocity.X) * damping;\r\n                state.Velocity.Y = (state.Force.Y * dT + state.Velocity.Y) * damping;\r\n                // Update KE\r\n                totalKE += (state.Velocity.X * state.Velocity.X) + (state.Velocity.Y * state.Velocity.Y);\r\n                // Update position\r\n                var temp = state.Position.X + state.Velocity.X * dT;\r\n                if (!isNaN(temp))\r\n                    state.Position.X = temp;\r\n                temp = state.Position.Y + state.Velocity.Y * dT;\r\n                if (!isNaN(temp))\r\n                    state.Position.Y = temp;\r\n            }\r\n\r\n            return totalKE;\r\n        }\r\n        Disturb() {\r\n            this._IsGraphDisturbed = true;\r\n        }\r\n    }\r\n}","/// <reference path=\"Physics/Engine.ts\" />\r\n\r\nmodule Fayde.KineticGraph {\r\n    export class EdgeCanvas extends Fayde.Controls.Canvas implements Physics.IEdge {\r\n        Source: Physics.INode;\r\n        Sink: Physics.INode;\r\n\r\n        private _IsBidirectional: boolean = false;\r\n        get IsBidirectional(): boolean { return this._IsBidirectional; }\r\n        set IsBidirectional(value: boolean) {\r\n            this._IsBidirectional = value;\r\n            this._Triangle.Visibility = value === true ? Fayde.Visibility.Visible : Fayde.Visibility.Collapsed;\r\n        }\r\n\r\n        private _Line: Fayde.Shapes.Line;\r\n        private _Triangle: Fayde.Shapes.Polygon;\r\n\r\n        get Left(): number { return this.GetValue(Fayde.Controls.Canvas.LeftProperty); }\r\n        set Left(value: number) { this.SetValue(Fayde.Controls.Canvas.LeftProperty, value); }\r\n\r\n        get Top(): number { return this.GetValue(Fayde.Controls.Canvas.TopProperty); }\r\n        set Top(value: number) { this.SetValue(Fayde.Controls.Canvas.TopProperty, value); }\r\n\r\n        constructor() {\r\n            super();\r\n\r\n            this.IsHitTestVisible = false;\r\n\r\n            this.Children.Add(this._Line = buildLine());\r\n            this.Children.Add(this._Triangle = buildTriangle(5, 9));\r\n            this._Triangle.Visibility = this.IsBidirectional === true ? Fayde.Visibility.Visible : Fayde.Visibility.Collapsed;\r\n        }\r\n\r\n        UpdatePosition() {\r\n            var source = this.Source;\r\n            var sink = this.Sink;\r\n\r\n            var a = source == null ? { X: 0, Y: 0 } : source.PhysicalState.Position;\r\n            var b = sink == null ? { X: 0, Y: 0 } : sink.PhysicalState.Position;\r\n\r\n            var theta = getLineAngle(a, b);\r\n            if (isNaN(theta))\r\n                return;\r\n            var thetaRad = theta * (Math.PI / 180);\r\n            //double thetaRev = thetaRad - (Math.PI*2.0);\r\n\r\n            var sp = source == null ? a : getEdgeOfCircle(a, thetaRad, source.Radius, true);\r\n            var ep = sink == null ? b : getEdgeOfCircle(b, thetaRad, sink.Radius, false);\r\n\r\n            var x1 = Math.min(sp.X, ep.X);\r\n            var x2 = Math.max(sp.X, ep.X);\r\n            var y1 = Math.min(sp.Y, ep.Y);\r\n            var y2 = Math.max(sp.Y, ep.Y);\r\n\r\n            //Define boundaries\r\n            this.Left = x1;\r\n            this.Top = y1;\r\n            this.Width = x2 - x1;\r\n            this.Height = y2 - y1;\r\n\r\n            //Place line link on the correct corners of canvas\r\n            this._Line.X1 = ep.X > sp.X ? 0 : this.Width;\r\n            this._Line.Y1 = ep.Y > sp.Y ? 0 : this.Height;\r\n            this._Line.X2 = ep.X > sp.X ? this.Width : 0;\r\n            this._Line.Y2 = ep.Y > sp.Y ? this.Height : 0;\r\n\r\n            //Rotate the arrow then move it to the desired position\r\n            var tg = new Fayde.Media.TransformGroup();\r\n\r\n            var rt = new Fayde.Media.RotateTransform();\r\n            rt.Angle = theta;\r\n            rt.CenterX = this._Triangle.Width / 2;\r\n            rt.CenterY = this._Triangle.Height / 2;\r\n            tg.Children.Add(rt);\r\n\r\n            var tt = new Fayde.Media.TranslateTransform();\r\n            tt.X = this.Width / 2 - this._Triangle.Width / 2;\r\n            tt.Y = this.Height / 2 - this._Triangle.Height / 2;\r\n            tg.Children.Add(tt);\r\n\r\n            this._Triangle.RenderTransform = tg;\r\n        }\r\n    }\r\n\r\n    function buildLine(): Fayde.Shapes.Line {\r\n        var line = new Fayde.Shapes.Line();\r\n        line.StrokeThickness = 1.0;\r\n        var stroke = new Fayde.Media.SolidColorBrush();\r\n        stroke.Color = Color.KnownColors.Black;\r\n        line.Stroke = stroke;\r\n        return line;\r\n    }\r\n    function buildTriangle(width: number, height: number): Fayde.Shapes.Polygon {\r\n        var p = new Fayde.Shapes.Polygon();\r\n        p.Width = width;\r\n        p.Height = height;\r\n        var fill = new Fayde.Media.SolidColorBrush();\r\n        fill.Color = Color.KnownColors.Black;\r\n        p.Fill = fill;\r\n        p.Points.Add(new Point(0, 0));\r\n        p.Points.Add(new Point(width, height / 2));\r\n        p.Points.Add(new Point(0, height));\r\n        return p;\r\n    }\r\n    function getLineAngle(a: Physics.IVector, b: Physics.IVector): number {\r\n        var xDist = Math.abs(a.X - b.X);\r\n        var yDist = Math.abs(a.Y - b.Y);\r\n        var theta = Math.atan(yDist / xDist);\r\n        theta *= 180 / Math.PI; //convert to degrees\r\n\r\n        if (b.Y > a.Y) //top quadrants\r\n            return b.X >= a.X ? theta : 180 - theta;\r\n        return b.X < a.X ? 180 + theta : 360 - theta;\r\n    }\r\n    function getEdgeOfCircle(p: Physics.IVector, theta: number, radius: number, start: boolean): Physics.IVector {\r\n        var tempX = p.X;\r\n        var tempY = p.Y;\r\n        tempX += Math.cos(theta) * radius * (start ? 1 : -1);\r\n        tempY += Math.sin(theta) * radius * (start ? 1 : -1);\r\n        return { X: tempX, Y: tempY };\r\n    }\r\n}","/// <reference path=\"Physics/Engine.ts\" />\r\n/// CODE\r\n/// <reference path=\"Graph.ts\" />\r\n\r\nmodule Fayde.KineticGraph {\r\n    import Point = minerva.Point;\r\n\r\n    class NodeState implements Physics.INodeState {\r\n        Position = { X: 0.0, Y: 0.0 };\r\n        Velocity = { X: 0.0, Y: 0.0 };\r\n        Force = { X: 0.0, Y: 0.0 };\r\n        IsFrozen = false;\r\n    }\r\n\r\n    export class NodeCanvas extends Fayde.Controls.Canvas implements Physics.INode {\r\n        private _Linkable: ILinkable = null;\r\n        get Linkable(): ILinkable { return this._Linkable; }\r\n        set Linkable(value: ILinkable) {\r\n            this._Linkable = value;\r\n            this.DataContext = value;\r\n        }\r\n        PhysicalState: Physics.INodeState;\r\n        Degree: number = 0.0;\r\n\r\n        Graph: Graph = null;\r\n\r\n        private _Circle = new Fayde.Shapes.Ellipse();\r\n        private _TextBlock = new Fayde.Controls.TextBlock();\r\n\r\n        static IsSelectedProperty = DependencyProperty.Register(\"IsSelected\", () => Boolean, NodeCanvas, false, (d, args) => (<NodeCanvas>d).OnIsSelectedChanged(args));\r\n        IsSelected: boolean;\r\n        private OnIsSelectedChanged(args: IDependencyPropertyChangedEventArgs) {\r\n            if (args.OldValue === args.NewValue)\r\n                return;\r\n\r\n            if (args.NewValue === true) {\r\n                console.log(\"Highlight me!\");\r\n            } else {\r\n                console.log(\"Unhighlight me!\");\r\n            }\r\n\r\n            if (this.Graph != null)\r\n                this.Graph.SetCurrentValue(Graph.SelectedNodeProperty, this);\r\n        }\r\n\r\n        static RadiusProperty = DependencyProperty.Register(\"Radius\", () => Number, NodeCanvas, 15.0, (d, args) => (<NodeCanvas>d).OnRadiusChanged(args));\r\n        Radius: number;\r\n        private OnRadiusChanged(args: IDependencyPropertyChangedEventArgs) {\r\n            var radius = args.NewValue;\r\n            this.UpdateMarkers();\r\n        }\r\n\r\n        ManualMovement = new nullstone.Event();\r\n\r\n        constructor() {\r\n            super();\r\n\r\n            this.PhysicalState = new NodeState();\r\n\r\n            this.MouseLeftButtonDown.on(this.Node_MouseLeftButtonDown, this);\r\n            this.MouseLeftButtonUp.on(this.Node_MouseLeftButtonUp, this);\r\n            this.MouseMove.on(this.Node_MouseMove, this);\r\n            this.LostMouseCapture.on(this.Node_LostMouseCapture, this);\r\n\r\n            var circle = this._Circle;\r\n            circle.Fill = new Fayde.Media.SolidColorBrush(Color.FromRgba(128, 128, 128, 0.5));\r\n            circle.Stroke = new Fayde.Media.SolidColorBrush(Color.FromRgba(128, 128, 128, 1.0));\r\n            circle.StrokeThickness = 2.0;\r\n            this.Children.Add(circle);\r\n            \r\n            var tb = this._TextBlock;\r\n            tb.SetBinding(Fayde.Controls.TextBlock.TextProperty, new Fayde.Data.Binding(\"\"));\r\n            tb.SizeChanged.on(this.TextBlock_SizeChanged, this);\r\n            this.Children.Add(tb);\r\n        }\r\n\r\n        UpdatePosition() {\r\n            Fayde.Controls.Canvas.SetLeft(this, this.PhysicalState.Position.X - (this._Circle.ActualWidth / 2));\r\n            Fayde.Controls.Canvas.SetTop(this, this.PhysicalState.Position.Y - (this._Circle.ActualHeight / 2));\r\n        }\r\n\r\n        SetDisplayMemberPath(path: string) {\r\n            this._TextBlock.SetBinding(Fayde.Controls.TextBlock.TextProperty, new Fayde.Data.Binding(path));\r\n        }\r\n\r\n        private TextBlock_SizeChanged(sender: any, e: Fayde.SizeChangedEventArgs) { this.UpdateMarkers(); }\r\n        private UpdateMarkers() {\r\n            var radius = this.Radius;\r\n            this._Circle.Width = 2 * radius;\r\n            this._Circle.Height = 2 * radius;\r\n            \r\n            var tbw = this._TextBlock.ActualWidth;\r\n            var tbh = this._TextBlock.ActualHeight;\r\n            this._TextBlock.SetValue(Fayde.Controls.Canvas.LeftProperty, radius - tbw / 2.0);\r\n            this._TextBlock.SetValue(Fayde.Controls.Canvas.TopProperty, radius - tbh / 2.0);\r\n        }\r\n\r\n        private _LastPos: Point = null;\r\n        private _IsDragging = false;\r\n        private Node_MouseLeftButtonDown(sender: any, e: Fayde.Input.MouseButtonEventArgs) {\r\n            if (e.Handled)\r\n                return;\r\n            e.Handled = this.PhysicalState.IsFrozen = this._IsDragging = this.CaptureMouse();\r\n            this._LastPos = e.GetPosition(this.VisualParent);\r\n        }\r\n        private Node_MouseLeftButtonUp(sender: any, e: Fayde.Input.MouseButtonEventArgs) {\r\n            this.ReleaseMouseCapture();\r\n        }\r\n        private Node_MouseMove(sender: any, e: Fayde.Input.MouseEventArgs) {\r\n            if (this._IsDragging) {\r\n                var curPos = e.GetPosition(this.VisualParent);\r\n                var delta = new Point(curPos.x - this._LastPos.x, curPos.y - this._LastPos.y);\r\n                this.PhysicalState.Position.X += delta.x;\r\n                this.PhysicalState.Position.Y += delta.y;\r\n                this._LastPos = curPos;\r\n            }\r\n        }\r\n        private Node_LostMouseCapture(sender: any, e: Fayde.Input.MouseEventArgs) {\r\n            this.PhysicalState.IsFrozen = false;\r\n            this._IsDragging = false;\r\n            this.ManualMovement.raise(this, null);\r\n        }\r\n    }\r\n}","/// <reference path=\"ILinkable.ts\" />\r\n\r\nmodule Fayde.KineticGraph {\r\n    export interface ILinkableEdge {\r\n        Source: ILinkable;\r\n        Sink: ILinkable;\r\n    }\r\n}","/// <reference path=\"Physics/Engine.ts\" />\r\n/// <reference path=\"NodeCanvas.ts\" />\r\n/// <reference path=\"EdgeCanvas.ts\" />\r\n/// <reference path=\"ILinkable.ts\" />\r\n/// <reference path=\"ILinkableEdge.ts\" />\r\n\r\nmodule Fayde.KineticGraph {\r\n    var MAX_FPS = 100;\r\n    var MAX_MSPF = 1000 / MAX_FPS;\r\n\r\n    var MIN_ALLOWED_REPULSION = 10.0;\r\n    var MIN_ALLOWED_SPRING_TENSION = 0.0001;\r\n\r\n    import Point = minerva.Point;\r\n\r\n    export class Graph extends Fayde.Controls.Canvas implements Fayde.ITimerListener {\r\n        private _Engine = new Physics.Engine();\r\n\r\n        private _CanvasScale: Fayde.Media.ScaleTransform;\r\n        private _CanvasTranslate: Fayde.Media.TranslateTransform;\r\n\r\n        private _Timer: Fayde.ClockTimer;\r\n\r\n        private Nodes: NodeCanvas[] = [];\r\n        private Edges: EdgeCanvas[] = [];\r\n\r\n        static IsBidirectionalProperty = DependencyProperty.Register(\"IsBidirectional\", () => Boolean, Graph, false, (d: Graph, args) => d.OnIsBidirectionalChanged(args));\r\n        static SelectedNodeProperty = DependencyProperty.Register(\"SelectedNode\", () => NodeCanvas, Graph, undefined, (d: Graph, args) => d.OnSelectedNodeChanged(args));\r\n        static NodesSourceProperty = DependencyProperty.Register(\"NodesSource\", () => nullstone.IEnumerable_, Graph, undefined, (d: Graph, args) => d.OnNodesSourceChanged(args));\r\n        static EdgesSourceProperty = DependencyProperty.Register(\"EdgesSource\", () => nullstone.IEnumerable_, Graph, undefined, (d: Graph, args) => d.OnEdgesSourceChanged(args));\r\n        static RepulsionProperty = DependencyProperty.Register(\"Repulsion\", () => Number, Graph, 300.0, (d: Graph, args) => d.OnRepulsionChanged(args));\r\n        static SpringTensionProperty = DependencyProperty.Register(\"SpringTension\", () => Number, Graph, 0.0009, (d: Graph, args) => d.OnSpringTensionChanged(args));\r\n        static NodeDisplayMemberPathProperty = DependencyProperty.Register(\"NodeDisplayMemberPath\", () => String, Graph, undefined, (d: Graph, args) => d.OnNodeDisplayMemberPathChanged(args));\r\n        static NodeWeightPathProperty = DependencyProperty.Register(\"NodeWeightPath\", () => String, Graph, undefined, (d: Graph, args) => d.OnNodeWeightPathChanged(args));\r\n\r\n        IsBidirectional: boolean;\r\n        SelectedNode: NodeCanvas;\r\n        NodesSource: nullstone.IEnumerable<ILinkable>;\r\n        EdgesSource: nullstone.IEnumerable<ILinkableEdge>;\r\n        Repulsion: number;\r\n        SpringTension: number;\r\n        NodeDisplayMemberPath: string;\r\n        NodeWeightPath: string;\r\n\r\n        private OnIsBidirectionalChanged (args: IDependencyPropertyChangedEventArgs) {\r\n            var isb = args.NewValue === true;\r\n            this.Edges.forEach(e => e.IsBidirectional = isb);\r\n        }\r\n\r\n        private OnSelectedNodeChanged (args: IDependencyPropertyChangedEventArgs) {\r\n            var oldNode = <NodeCanvas>args.OldValue;\r\n            if (oldNode != null && oldNode.IsSelected)\r\n                oldNode.SetCurrentValue(NodeCanvas.IsSelectedProperty, false);\r\n        }\r\n\r\n        private OnNodesSourceChanged (args: IDependencyPropertyChangedEventArgs) {\r\n            var oldNC = Fayde.Collections.INotifyCollectionChanged_.as(args.OldValue);\r\n            if (oldNC)\r\n                oldNC.CollectionChanged.off(this.NodesSource_CollectionChanged, this);\r\n            this.RemoveNodes(coerceToArray(args.OldValue));\r\n\r\n            this.AddNodes(coerceToArray(args.NewValue));\r\n            var newNC = Fayde.Collections.INotifyCollectionChanged_.as(args.NewValue);\r\n            if (newNC)\r\n                newNC.CollectionChanged.on(this.NodesSource_CollectionChanged, this);\r\n        }\r\n\r\n        private NodesSource_CollectionChanged (sender: any, e: Fayde.Collections.CollectionChangedEventArgs) {\r\n            switch (e.Action) {\r\n                case Fayde.Collections.CollectionChangedAction.Add:\r\n                    this.AddNodes(e.NewItems);\r\n                    break;\r\n                case Fayde.Collections.CollectionChangedAction.Remove:\r\n                    this.RemoveNodes(e.OldItems);\r\n                    break;\r\n                case Fayde.Collections.CollectionChangedAction.Reset:\r\n                    this.ClearNodes();\r\n                    break;\r\n                case Fayde.Collections.CollectionChangedAction.Replace:\r\n                    this.AddNodes(e.NewItems);\r\n                    this.RemoveNodes(e.OldItems);\r\n                    break;\r\n            }\r\n        }\r\n\r\n        private OnEdgesSourceChanged (args: IDependencyPropertyChangedEventArgs) {\r\n            var oldNC = Fayde.Collections.INotifyCollectionChanged_.as(args.OldValue);\r\n            if (oldNC)\r\n                oldNC.CollectionChanged.off(this.EdgesSource_CollectionChanged, this);\r\n            this.RemoveNodes(coerceToArray(args.OldValue));\r\n\r\n            this.AddEdges(coerceToArray(args.NewValue));\r\n            var newNC = Fayde.Collections.INotifyCollectionChanged_.as(args.NewValue);\r\n            if (newNC)\r\n                newNC.CollectionChanged.on(this.EdgesSource_CollectionChanged, this);\r\n        }\r\n\r\n        private EdgesSource_CollectionChanged (sender: any, e: Fayde.Collections.CollectionChangedEventArgs) {\r\n            switch (e.Action) {\r\n                case Fayde.Collections.CollectionChangedAction.Add:\r\n                    this.AddEdges(e.NewItems);\r\n                    break;\r\n                case Fayde.Collections.CollectionChangedAction.Remove:\r\n                    this.RemoveEdges(e.OldItems);\r\n                    break;\r\n                case Fayde.Collections.CollectionChangedAction.Reset:\r\n                    this.ClearEdges();\r\n                    break;\r\n                case Fayde.Collections.CollectionChangedAction.Replace:\r\n                    this.AddEdges(e.NewItems);\r\n                    this.RemoveEdges(e.OldItems);\r\n                    break;\r\n            }\r\n        }\r\n\r\n        private OnRepulsionChanged (args: IDependencyPropertyChangedEventArgs) {\r\n            if (args.NewValue < MIN_ALLOWED_REPULSION)\r\n                throw new ArgumentOutOfRangeException(\"Repulsion\");\r\n            this._Engine.Repulsion = args.NewValue;\r\n            this._Engine.Disturb();\r\n        }\r\n\r\n        private OnSpringTensionChanged (args: IDependencyPropertyChangedEventArgs) {\r\n            if (args.NewValue < MIN_ALLOWED_SPRING_TENSION)\r\n                throw new ArgumentOutOfRangeException(\"SpringTension\");\r\n            this._Engine.SpringTension = args.NewValue;\r\n            this._Engine.Disturb();\r\n        }\r\n\r\n        private OnNodeDisplayMemberPathChanged (args: IDependencyPropertyChangedEventArgs) {\r\n            var path = args.NewValue || \"\";\r\n            this.Nodes.forEach(n => n.SetDisplayMemberPath(path));\r\n        }\r\n\r\n        private OnNodeWeightPathChanged (args: IDependencyPropertyChangedEventArgs) {\r\n            var path = args.NewValue || \"\";\r\n            this.Nodes.forEach(n => this.SetNodeWeightPath(n, path));\r\n        }\r\n\r\n        private SetNodeWeightPath (nodeCanvas: NodeCanvas, path: string) {\r\n            if (!path)\r\n                return nodeCanvas.ClearValue(NodeCanvas.RadiusProperty);\r\n            nodeCanvas.SetBinding(NodeCanvas.RadiusProperty, new Fayde.Data.Binding(path));\r\n        }\r\n\r\n        constructor () {\r\n            super();\r\n\r\n            this._Engine.Attach(this.Nodes, this.Edges);\r\n\r\n            this.ResetMovement();\r\n\r\n            var bg = new Fayde.Media.SolidColorBrush();\r\n            bg.Color = Color.KnownColors.Transparent;\r\n            this.Background = bg;\r\n\r\n            this.MouseLeftButtonDown.on(this.Graph_MouseLeftButtonDown, this);\r\n            this.MouseLeftButtonUp.on(this.Graph_MouseLeftButtonUp, this);\r\n            this.MouseMove.on(this.Graph_MouseMove, this);\r\n            this.LostMouseCapture.on(this.Graph_LostMouseCapture, this);\r\n            this.SizeChanged.on(this.Graph_SizeChanged, this);\r\n\r\n            this._Timer = new Fayde.ClockTimer();\r\n            this._Timer.RegisterTimer(this);\r\n        }\r\n\r\n        OnTicked (lastTime: number, nowTime: number) {\r\n            this._Engine.Step();\r\n            this.UpdateVisuals();\r\n        }\r\n\r\n        private _LastPos: Point = null;\r\n        private _IsDragging = false;\r\n\r\n        private Graph_MouseLeftButtonDown (sender: any, e: Fayde.Input.MouseButtonEventArgs) {\r\n            if (e.Handled)\r\n                return;\r\n            e.Handled = this._IsDragging = this.CaptureMouse();\r\n            this._LastPos = e.GetPosition(this);\r\n        }\r\n\r\n        private Graph_MouseMove (sender: any, e: Fayde.Input.MouseEventArgs) {\r\n            if (this._IsDragging) {\r\n                var curPos = e.GetPosition(this);\r\n                this._CanvasTranslate.X += (curPos.x - this._LastPos.x);\r\n                this._CanvasTranslate.Y += (curPos.y - this._LastPos.y);\r\n                this._LastPos = curPos;\r\n            }\r\n        }\r\n\r\n        private Graph_MouseLeftButtonUp (sender: any, e: Fayde.Input.MouseButtonEventArgs) {\r\n            this.ReleaseMouseCapture();\r\n        }\r\n\r\n        private Graph_LostMouseCapture (sender: any, e: Fayde.Input.MouseEventArgs) {\r\n            this._IsDragging = false;\r\n        }\r\n\r\n        private Graph_SizeChanged (sender: any, e: Fayde.SizeChangedEventArgs) {\r\n            var dw = e.NewSize.width - e.PreviousSize.width;\r\n            var dh = e.NewSize.height - e.PreviousSize.height;\r\n            this._CanvasTranslate.X += dw / 2.0;\r\n            this._CanvasTranslate.Y += dh / 2.0;\r\n        }\r\n\r\n        ResetMovement () {\r\n            var tg = new Fayde.Media.TransformGroup();\r\n            tg.Children.Add(this._CanvasScale = new Fayde.Media.ScaleTransform());\r\n            tg.Children.Add(this._CanvasTranslate = new Fayde.Media.TranslateTransform());\r\n            this.RenderTransform = tg;\r\n        }\r\n\r\n        Center () {\r\n            var nodes = this.Nodes;\r\n            var count = nodes.length;\r\n            var totX = 0.0;\r\n            var totY = 0.0;\r\n\r\n            for (var en = nullstone.IEnumerator_.fromArray(nodes); en.moveNext();) {\r\n                var node = en.current;\r\n                totX += node.PhysicalState.Position.X;\r\n                totY += node.PhysicalState.Position.Y;\r\n            }\r\n            this._CanvasTranslate.X = (this.ActualWidth / 2) - (totX / count);\r\n            this._CanvasTranslate.Y = (this.ActualHeight / 2) - (totY / count);\r\n        }\r\n\r\n        private _LastVisualTick: number = new Date(0).getTime();\r\n\r\n        private UpdateVisuals () {\r\n            var now = new Date().getTime();\r\n            if (now - this._LastVisualTick < MAX_MSPF)\r\n                return;\r\n            this._LastVisualTick = now;\r\n\r\n            this.Nodes.forEach(n => n.UpdatePosition());\r\n            this.Edges.forEach(e => e.UpdatePosition());\r\n        }\r\n\r\n\r\n        private AddEdges (newEdges: ILinkableEdge[]) {\r\n            if (!newEdges)\r\n                return;\r\n            for (var i = 0, len = newEdges.length; i < len; i++) {\r\n                this.FindOrAddEdge(newEdges[i]);\r\n            }\r\n        }\r\n\r\n        private FindOrAddEdge (newEdge: ILinkableEdge): EdgeCanvas {\r\n            var index = this.FindEdgeIndex(newEdge);\r\n            if (index > -1)\r\n                return this.Edges[index];\r\n            return this.AddEdge(newEdge);\r\n        }\r\n\r\n        private AddEdge (gedge: ILinkableEdge): EdgeCanvas {\r\n            var edge = new EdgeCanvas();\r\n            edge.Source = this.FindOrAddNode(gedge.Source);\r\n            edge.Sink = this.FindOrAddNode(gedge.Sink);\r\n            if (edge.Source.Linkable.UniqueID === edge.Sink.Linkable.UniqueID)\r\n                return null;\r\n            this.Edges.push(edge);\r\n            edge.Sink.Degree++;\r\n            edge.Source.Degree++;\r\n            this.Children.Add(edge);\r\n            this._Engine.Disturb();\r\n            return edge;\r\n        }\r\n\r\n        private RemoveEdges (oldEdges: ILinkableEdge[]) {\r\n            if (!oldEdges)\r\n                return;\r\n            for (var i = 0, len = oldEdges.length; i < len; i++) {\r\n                this.RemoveEdge(oldEdges[i]);\r\n            }\r\n        }\r\n\r\n        private RemoveEdge (edge: ILinkableEdge) {\r\n            var index = this.FindEdgeIndex(edge);\r\n            if (index < 0)\r\n                return;\r\n            var existing = this.Edges.splice(index, 1)[0];\r\n            this.Children.Remove(existing);\r\n            existing.Sink.Degree--;\r\n            existing.Source.Degree--;\r\n            this._Engine.Disturb();\r\n        }\r\n\r\n        private ClearEdges () {\r\n            this.Edges.forEach(e => this.Children.Remove(e));\r\n            this.Edges = [];\r\n            this._Engine.Disturb();\r\n        }\r\n\r\n        private FindEdgeIndex (edge: ILinkableEdge): number {\r\n            var edges = this.Edges;\r\n            var len = edges.length;\r\n            var e: EdgeCanvas;\r\n            for (var i = 0; i < len; i++) {\r\n                e = edges[i];\r\n                if (e.Source.Linkable.UniqueID === edge.Source.UniqueID && e.Sink.Linkable.UniqueID === edge.Sink.UniqueID)\r\n                    return i;\r\n            }\r\n            return -1;\r\n        }\r\n\r\n        private AddNodes (newLinkables: ILinkable[]) {\r\n            if (!newLinkables)\r\n                return;\r\n            for (var i = 0, len = newLinkables.length; i < len; i++) {\r\n                this.FindOrAddNode(newLinkables[i]);\r\n            }\r\n        }\r\n\r\n        private FindOrAddNode (linkable: ILinkable): NodeCanvas {\r\n            var index = this.FindNodeIndex(linkable);\r\n            if (index > -1)\r\n                return this.Nodes[index];\r\n            return this.AddNode(linkable);\r\n        }\r\n\r\n        private AddNode (newLinkable: ILinkable): NodeCanvas {\r\n            var node = new NodeCanvas();\r\n            node.Linkable = newLinkable;\r\n            node.Graph = this;\r\n            this.Nodes.push(node);\r\n            this.Children.Add(node);\r\n            node.ManualMovement.on(this.Node_ManualMovement, this);\r\n            node.PhysicalState.Position = this._GetRandomVector();\r\n            node.SetDisplayMemberPath(this.NodeDisplayMemberPath);\r\n            this.SetNodeWeightPath(node, this.NodeWeightPath);\r\n            this._Engine.Disturb();\r\n            return node;\r\n        }\r\n\r\n        private RemoveNodes (oldLinkables: ILinkable[]) {\r\n            if (!oldLinkables)\r\n                return;\r\n            for (var i = 0, len = oldLinkables.length; i < len; i++) {\r\n                this.RemoveNode(oldLinkables[i]);\r\n            }\r\n        }\r\n\r\n        private RemoveNode (oldLinkable: ILinkable) {\r\n            var index = this.FindNodeIndex(oldLinkable);\r\n            if (index < 0)\r\n                return;\r\n            var existing = this.Nodes.splice(index, 1)[0];\r\n            existing.ManualMovement.off(this.Node_ManualMovement, this);\r\n            existing.Graph = null;\r\n            this.Children.Remove(existing);\r\n            this._Engine.Disturb();\r\n        }\r\n\r\n        private ClearNodes () {\r\n            this.Nodes.forEach(n => {\r\n                n.ManualMovement.off(this.Node_ManualMovement, this);\r\n                n.Graph = null;\r\n                this.Children.Remove(n);\r\n            });\r\n            this.Nodes = [];\r\n            this._Engine.Disturb();\r\n        }\r\n\r\n        private FindNodeIndex (linkable: ILinkable): number {\r\n            var nodes = this.Nodes;\r\n            var len = nodes.length;\r\n            for (var i = 0; i < len; i++) {\r\n                if (nodes[i].Linkable.UniqueID === linkable.UniqueID)\r\n                    return i;\r\n            }\r\n            return -1;\r\n        }\r\n\r\n        private Node_ManualMovement (sender: any, e: any) {\r\n            this._Engine.Disturb();\r\n        }\r\n\r\n        private _GetRandomVector (): Physics.IVector {\r\n            var width = this.ActualWidth;\r\n            if (width <= 0)\r\n                width = 100;\r\n            var height = this.ActualHeight;\r\n            if (height <= 0)\r\n                height = 100;\r\n            return {X: randomInt(0, width), Y: randomInt(0, height)};\r\n        }\r\n    }\r\n\r\n    function randomInt (low: number, high: number): number {\r\n        return Math.floor(Math.random() * (high - low) + low);\r\n    }\r\n\r\n    function coerceToArray (obj: any): any[] {\r\n        if (obj instanceof Array)\r\n            return obj;\r\n        var en = nullstone.IEnumerable_.as(obj);\r\n        if (en) {\r\n            var arr = [];\r\n            for (var e = en.getEnumerator(); e.moveNext();) {\r\n                arr.push(e.current);\r\n            }\r\n            return arr;\r\n        }\r\n        return [];\r\n    }\r\n}"],"sourceRoot":"/source/"}